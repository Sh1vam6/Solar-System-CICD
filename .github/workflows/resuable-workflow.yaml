name: Reusable workflow 

on:
  workflow_call:
    secrets:
      k8s-config:
        required: true
      mongodb-password:
        required: true

jobs:
  resuse-deploy:
    environment:
        name: development
        url: https://${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
      
    outputs:
        APP_INGRESS_HOST: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4


      - name: Install kubectl cli
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.32.0'

      - name: set kubeconfig file
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.k8s-config }}

      - name: Verify Kubernetes cluster
        run: |
           kubectl cluster-info
           kubectl get nodes 

      - name: Save nginx ingress controller ip as GITHUB Env Variable
        run: |
          echo "INGRESS_IP=$(kubectl get svc -n ingress-nginx ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV

      - name: Replace token in Manifest file
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '${'
          tokenSuffix: '}'
          files: '["kubernetes/development/*.yaml"]'
        env:
            NAMESPACE: ${{ vars.NAMESPACE}}
            REPLICAS: ${{ vars.REPLICAS}}
            K8S_IMAGE: ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }}
            INGRESS_IP: ${{ env.INGRESS_IP }}

      - name: check files
        run: |
           cat kubernetes/development/*.yaml

      - name: Create MongoDb Secrets
        run: |
            kubectl -n ${{ vars.NAMESPACE}} create secret generic mongo-creds \
            --from-literal=MONGO_URI=${{env.MONGO_URI}} \
            --from-literal=MONGO_USERNAME=${{vars.MONGO_USERNAME}} \
            --from-literal=MONGO_PASSWORD=${{secrets.mongodb-password}} \
            --save-config \
            --dry-run=client \
            -o yaml | kubectl apply -f -

      - name: Deploy to dev Env
        run: |
            kubectl apply -f kubernetes/development

    # after creating all the above steps , i can see in my cluster all the pods are running and to access the application 
    # kubectl get ing -n develpment , it will give the hostname and ip address of the application
    # i can access the application using the hostname and ip address

      - name: Set app ingress host URL
        id: set-ingress-host-address
        run: |
            echo "APP_INGRESS_HOST=$(kubectl get ing -n ${{ vars.NAMESPACE}} -o jsonpath='{.items[0].spec.tls[0].hosts[0]}')" >> $GITHUB_OUTPUT

 